/*
 * Template 0.2 for basic communication between nodes.
 *
 * This template creates a class that contains a publisher and a subscriber.
 * Refer to temp_class.cpp and temp_class.h for detailed info.
 * 
 * Chad Li
 * 2016.03.03
*/

#include "planning_class.cpp"
#include <ros/ros.h>
#include <geometry_msgs/Twist.h>
#include <iostream>

using namespace std;

int main(int argc, char **argv) {
    // (1) Assign a name to your node
    // Place where you initialize your node, remember all nodes should have
    // different names, here the node name is "test_node_master"
    ros::init(argc, argv, "test_node_master");  

    // Create a "class" with name of your choice, here the name is "temp2"
    // Define a class which contains a publisher and a subscriber, for more
    // details please refer to temp_class.h
    temp_class temp1;
    // Setting the rate of this node, paired with r.sleep(); below to ensure
    // rate.
    ros::Rate r(10);


    while(ros::ok()){

        // --------------------------------------------------------------------
        // Don't care, don't change unless you know what you are doing
	ros::spinOnce();
	r.sleep();
        // --------------------------------------------------------------------
    }
    return 0;	
	
}
